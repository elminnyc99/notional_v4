{"abi":[{"type":"function","name":"allowTransfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"currentAccount","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"asset","inputs":[],"outputs":[{"name":"assetTokenAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burnShares","inputs":[{"name":"sharesOwner","type":"address","internalType":"address"},{"name":"sharesToBurn","type":"uint256","internalType":"uint256"},{"name":"sharesHeld","type":"uint256","internalType":"uint256"},{"name":"redeemData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"assetsWithdrawn","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"clearCurrentAccount","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"collectFees","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"convertSharesToYieldToken","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"yieldTokens","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"convertToAssets","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"convertToShares","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"convertYieldTokenToAsset","inputs":[],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"convertYieldTokenToShares","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"yieldTokens","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"effectiveSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"feeRate","inputs":[],"outputs":[{"name":"feeRate","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"feesAccrued","inputs":[],"outputs":[{"name":"feesAccruedInYieldToken","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"initiateWithdraw","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"sharesHeld","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"requestId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"initiateWithdrawNative","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"requestId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"mintShares","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"depositData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"sharesMinted","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"postLiquidation","inputs":[{"name":"liquidator","type":"address","internalType":"address"},{"name":"liquidateAccount","type":"address","internalType":"address"},{"name":"sharesToLiquidator","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preLiquidation","inputs":[{"name":"liquidator","type":"address","internalType":"address"},{"name":"liquidateAccount","type":"address","internalType":"address"},{"name":"sharesToLiquidate","type":"uint256","internalType":"uint256"},{"name":"accountSharesHeld","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"price","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"price","inputs":[{"name":"borrower","type":"address","internalType":"address"}],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemNative","inputs":[{"name":"sharesToRedeem","type":"uint256","internalType":"uint256"},{"name":"redeemData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"assetsWithdrawn","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalAssets","inputs":[],"outputs":[{"name":"totalManagedAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"yieldToken","inputs":[],"outputs":[{"name":"yieldTokenAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VaultCreated","inputs":[{"name":"vault","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowTransfer(address,uint256,address)":"98476c2b","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","burnShares(address,uint256,uint256,bytes)":"0db734d4","clearCurrentAccount()":"b35cb45d","collectFees()":"c8796572","convertSharesToYieldToken(uint256)":"b905a4ff","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","convertYieldTokenToAsset()":"e0b4327d","convertYieldTokenToShares(uint256)":"25565931","decimals()":"313ce567","effectiveSupply()":"8fc47093","feeRate()":"978bbdb9","feesAccrued()":"94db0595","initiateWithdraw(address,uint256,bytes)":"57831a04","initiateWithdrawNative(bytes)":"131b822d","mintShares(uint256,address,bytes)":"127af7f9","name()":"06fdde03","postLiquidation(address,address,uint256)":"98dce16d","preLiquidation(address,address,uint256,uint256)":"cc351ac5","price()":"a035b1fe","price(address)":"aea91078","redeemNative(uint256,bytes)":"eb9b1912","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","yieldToken()":"76d5de85"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currentAccount\",\"type\":\"address\"}],\"name\":\"allowTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesHeld\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"redeemData\",\"type\":\"bytes\"}],\"name\":\"burnShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetsWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearCurrentAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertSharesToYieldToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convertYieldTokenToAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertYieldTokenToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"effectiveSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feesAccruedInYieldToken\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesHeld\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initiateWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initiateWithdrawNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"depositData\",\"type\":\"bytes\"}],\"name\":\"mintShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidateAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToLiquidator\",\"type\":\"uint256\"}],\"name\":\"postLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidateAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToLiquidate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accountSharesHeld\",\"type\":\"uint256\"}],\"name\":\"preLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesToRedeem\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"redeemData\",\"type\":\"bytes\"}],\"name\":\"redeemNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetsWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"yieldTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowTransfer(address,uint256,address)\":{\"params\":{\"amount\":\"The amount of shares to allow the transfer of.\",\"currentAccount\":\"The address of the current account.\",\"to\":\"The address to allow the transfer to.\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burnShares(address,uint256,uint256,bytes)\":{\"params\":{\"redeemData\":\"calldata used to redeem the yield token.\",\"sharesOwner\":\"The address of the account to burn the shares for.\",\"sharesToBurn\":\"The amount of shares to burn.\"}},\"collectFees()\":{\"details\":\"Collects the fees accrued by the vault. Only callable by the owner.\"},\"convertSharesToYieldToken(uint256)\":{\"details\":\"Returns the amount of yield tokens that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertYieldTokenToAsset()\":{\"details\":\"Returns the oracle price of a yield token in terms of the asset token.\"},\"convertYieldTokenToShares(uint256)\":{\"details\":\"Returns the amount of yield tokens that the account would receive for the amount of shares provided.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"effectiveSupply()\":{\"details\":\"Returns the effective supply which excludes any escrowed shares.\"},\"feeRate()\":{\"details\":\"Returns the fee rate of the vault where 100% = 1e18.\"},\"feesAccrued()\":{\"details\":\"Returns the balance of yield tokens accrued by the vault.\"},\"initiateWithdraw(address,uint256,bytes)\":{\"params\":{\"account\":\"The address of the account to initiate the withdraw for.\",\"data\":\"calldata used to initiate the withdraw.\",\"sharesHeld\":\"The number of shares the account holds.\"}},\"initiateWithdrawNative(bytes)\":{\"params\":{\"data\":\"calldata used to initiate the withdraw.\"}},\"mintShares(uint256,address,bytes)\":{\"params\":{\"assets\":\"The amount of assets to mint shares for.\",\"depositData\":\"calldata used to deposit the assets.\",\"receiver\":\"The address to mint the shares to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"postLiquidation(address,address,uint256)\":{\"params\":{\"liquidateAccount\":\"The address of the account to liquidate.\",\"liquidator\":\"The address of the liquidator.\",\"sharesToLiquidator\":\"The amount of shares to liquidate.\"}},\"preLiquidation(address,address,uint256,uint256)\":{\"params\":{\"accountSharesHeld\":\"The amount of shares the account holds.\",\"liquidateAccount\":\"The address of the account to liquidate.\",\"liquidator\":\"The address of the liquidator.\",\"sharesToLiquidate\":\"The amount of shares to liquidate.\"}},\"price()\":{\"details\":\"It corresponds to the price of 10**(collateral token decimals) assets of collateral token quoted in 10**(loan token decimals) assets of loan token with `36 + loan token decimals - collateral token decimals` decimals of precision.\"},\"price(address)\":{\"details\":\"Returns the price of a yield token in terms of the asset token for the given borrower taking into account withdrawals.\"},\"redeemNative(uint256,bytes)\":{\"params\":{\"redeemData\":\"calldata used to redeem the yield token.\",\"sharesToRedeem\":\"The amount of shares to redeem.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"yieldToken()\":{\"details\":\"Returns the address of the yield token held by the vault. Does not equal the share token, which represents each user's share of the yield tokens held by the vault. - MUST be an ERC-20 token contract. - MUST NOT revert.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowTransfer(address,uint256,address)\":{\"notice\":\"Allows the lending market to transfer shares on exit position or liquidation.\"},\"burnShares(address,uint256,uint256,bytes)\":{\"notice\":\"Burns shares for a given number of shares.\"},\"clearCurrentAccount()\":{\"notice\":\"Clears the current account.\"},\"initiateWithdraw(address,uint256,bytes)\":{\"notice\":\"Initiates a withdraw for a given number of shares.\"},\"initiateWithdrawNative(bytes)\":{\"notice\":\"Initiates a withdraw for the native balance of the account.\"},\"mintShares(uint256,address,bytes)\":{\"notice\":\"Mints shares for a given number of assets.\"},\"postLiquidation(address,address,uint256)\":{\"notice\":\"Post-liquidation function.\"},\"preLiquidation(address,address,uint256,uint256)\":{\"notice\":\"Pre-liquidation function.\"},\"price()\":{\"notice\":\"Returns the price of 1 asset of collateral token quoted in 1 asset of loan token, scaled by 1e36.\"},\"redeemNative(uint256,bytes)\":{\"notice\":\"Redeems shares for assets for a native token.\"}},\"notice\":\"A strategy vault that is specifically designed for leveraged yield strategies. Minting and burning shares are restricted to the `enterPosition` and `exitPosition` functions respectively. This means that shares will be exclusively held on lending markets as collateral unless the LendingMarket is set to NONE. In this case, the user will just be holding the yield token without any leverage. The `transfer` function is non-standard in that transfers off of a lending market are restricted to ensure that liquidation conditions are met. This contract also serves as its own oracle.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IYieldStrategy.sol\":\"IYieldStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":forge-std/=node_modules/forge-std/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"src/interfaces/IYieldStrategy.sol\":{\"keccak256\":\"0x12ed1d6f271aca0e3871b63b29034b968d88b218f4044f3ec49cd09748788b7d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93b62b7a8fcf81bcd615feb5cf5ad6dcec767316cc1833ec1232e2b59f51130e\",\"dweb:/ipfs/QmTd9P5RcFVgYKraGRgpM1S6UrNv8rkQUVDMetf2oFzeRh\"]},\"src/interfaces/Morpho/IMorpho.sol\":{\"keccak256\":\"0xaee7826b29bd6336aac7694a7def971f2652ea278e37b0910e512e40c746c4b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b866f45960a54883e5c9ead5285e5232860b8253088f7e4d0fb6544e24331ad\",\"dweb:/ipfs/QmdDcqr5RLcVLu2oJ2PrBrLv7oRqTjbXombEK7QvVKRPJY\"]},\"src/interfaces/Morpho/IMorphoCallbacks.sol\":{\"keccak256\":\"0x6baa2f223dac77e9a6cc9f729951467332bf6fda9f3dcf92d6f70b86692b12bd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b2e1cd9d9a4b4a63f95d35938c3fd2ab2a69797674d444c23441e0afa121d11c\",\"dweb:/ipfs/QmU4sqFX974a2YAsyYsCuomrC9r67aQxnh9pBnBKmmd68H\"]},\"src/interfaces/Morpho/IOracle.sol\":{\"keccak256\":\"0xddca994a05092a5c0f49e24ca63109149de7a7d655f9e3710dc2558079765b35\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://13975f1d2fad5b823b5b3a4a1e3e2d92dfad056cf62ecaa60fb18d7a65f5b816\",\"dweb:/ipfs/QmTDjRoMmC2Rt5JzkPbrwVf9vGKSLkDg9JtxbpeAkgw223\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.29+commit.ab55807c"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"vault","type":"address","indexed":true}],"type":"event","name":"VaultCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"currentAccount","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowTransfer"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"sharesOwner","type":"address"},{"internalType":"uint256","name":"sharesToBurn","type":"uint256"},{"internalType":"uint256","name":"sharesHeld","type":"uint256"},{"internalType":"bytes","name":"redeemData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"burnShares","outputs":[{"internalType":"uint256","name":"assetsWithdrawn","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearCurrentAccount"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"collectFees"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertSharesToYieldToken","outputs":[{"internalType":"uint256","name":"yieldTokens","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"convertYieldTokenToAsset","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertYieldTokenToShares","outputs":[{"internalType":"uint256","name":"yieldTokens","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"effectiveSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"feeRate","outputs":[{"internalType":"uint256","name":"feeRate","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"feesAccrued","outputs":[{"internalType":"uint256","name":"feesAccruedInYieldToken","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"sharesHeld","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"initiateWithdraw","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"initiateWithdrawNative","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"depositData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mintShares","outputs":[{"internalType":"uint256","name":"sharesMinted","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"liquidator","type":"address"},{"internalType":"address","name":"liquidateAccount","type":"address"},{"internalType":"uint256","name":"sharesToLiquidator","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"postLiquidation"},{"inputs":[{"internalType":"address","name":"liquidator","type":"address"},{"internalType":"address","name":"liquidateAccount","type":"address"},{"internalType":"uint256","name":"sharesToLiquidate","type":"uint256"},{"internalType":"uint256","name":"accountSharesHeld","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"preLiquidation"},{"inputs":[],"stateMutability":"view","type":"function","name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"borrower","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"price","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"sharesToRedeem","type":"uint256"},{"internalType":"bytes","name":"redeemData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"redeemNative","outputs":[{"internalType":"uint256","name":"assetsWithdrawn","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"yieldToken","outputs":[{"internalType":"address","name":"yieldTokenAddress","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"allowTransfer(address,uint256,address)":{"params":{"amount":"The amount of shares to allow the transfer of.","currentAccount":"The address of the current account.","to":"The address to allow the transfer to."}},"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"asset()":{"details":"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"burnShares(address,uint256,uint256,bytes)":{"params":{"redeemData":"calldata used to redeem the yield token.","sharesOwner":"The address of the account to burn the shares for.","sharesToBurn":"The amount of shares to burn."}},"collectFees()":{"details":"Collects the fees accrued by the vault. Only callable by the owner."},"convertSharesToYieldToken(uint256)":{"details":"Returns the amount of yield tokens that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met."},"convertToAssets(uint256)":{"details":"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange."},"convertToShares(uint256)":{"details":"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"convertYieldTokenToAsset()":{"details":"Returns the oracle price of a yield token in terms of the asset token."},"convertYieldTokenToShares(uint256)":{"details":"Returns the amount of yield tokens that the account would receive for the amount of shares provided."},"decimals()":{"details":"Returns the decimals places of the token."},"effectiveSupply()":{"details":"Returns the effective supply which excludes any escrowed shares."},"feeRate()":{"details":"Returns the fee rate of the vault where 100% = 1e18."},"feesAccrued()":{"details":"Returns the balance of yield tokens accrued by the vault."},"initiateWithdraw(address,uint256,bytes)":{"params":{"account":"The address of the account to initiate the withdraw for.","data":"calldata used to initiate the withdraw.","sharesHeld":"The number of shares the account holds."}},"initiateWithdrawNative(bytes)":{"params":{"data":"calldata used to initiate the withdraw."}},"mintShares(uint256,address,bytes)":{"params":{"assets":"The amount of assets to mint shares for.","depositData":"calldata used to deposit the assets.","receiver":"The address to mint the shares to."}},"name()":{"details":"Returns the name of the token."},"postLiquidation(address,address,uint256)":{"params":{"liquidateAccount":"The address of the account to liquidate.","liquidator":"The address of the liquidator.","sharesToLiquidator":"The amount of shares to liquidate."}},"preLiquidation(address,address,uint256,uint256)":{"params":{"accountSharesHeld":"The amount of shares the account holds.","liquidateAccount":"The address of the account to liquidate.","liquidator":"The address of the liquidator.","sharesToLiquidate":"The amount of shares to liquidate."}},"price()":{"details":"It corresponds to the price of 10**(collateral token decimals) assets of collateral token quoted in 10**(loan token decimals) assets of loan token with `36 + loan token decimals - collateral token decimals` decimals of precision."},"price(address)":{"details":"Returns the price of a yield token in terms of the asset token for the given borrower taking into account withdrawals."},"redeemNative(uint256,bytes)":{"params":{"redeemData":"calldata used to redeem the yield token.","sharesToRedeem":"The amount of shares to redeem."}},"symbol()":{"details":"Returns the symbol of the token."},"totalAssets()":{"details":"Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"yieldToken()":{"details":"Returns the address of the yield token held by the vault. Does not equal the share token, which represents each user's share of the yield tokens held by the vault. - MUST be an ERC-20 token contract. - MUST NOT revert."}},"version":1},"userdoc":{"kind":"user","methods":{"allowTransfer(address,uint256,address)":{"notice":"Allows the lending market to transfer shares on exit position or liquidation."},"burnShares(address,uint256,uint256,bytes)":{"notice":"Burns shares for a given number of shares."},"clearCurrentAccount()":{"notice":"Clears the current account."},"initiateWithdraw(address,uint256,bytes)":{"notice":"Initiates a withdraw for a given number of shares."},"initiateWithdrawNative(bytes)":{"notice":"Initiates a withdraw for the native balance of the account."},"mintShares(uint256,address,bytes)":{"notice":"Mints shares for a given number of assets."},"postLiquidation(address,address,uint256)":{"notice":"Post-liquidation function."},"preLiquidation(address,address,uint256,uint256)":{"notice":"Pre-liquidation function."},"price()":{"notice":"Returns the price of 1 asset of collateral token quoted in 1 asset of loan token, scaled by 1e36."},"redeemNative(uint256,bytes)":{"notice":"Redeems shares for assets for a native token."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","forge-std/=node_modules/forge-std/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/IYieldStrategy.sol":"IYieldStrategy"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol":{"keccak256":"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c","urls":["bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba","dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"],"license":"MIT"},"node_modules/@openzeppelin/contracts/interfaces/IERC20Metadata.sol":{"keccak256":"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3","urls":["bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da","dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7","urls":["bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db","dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330","urls":["bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf","dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"],"license":"MIT"},"src/interfaces/IYieldStrategy.sol":{"keccak256":"0x12ed1d6f271aca0e3871b63b29034b968d88b218f4044f3ec49cd09748788b7d","urls":["bzz-raw://93b62b7a8fcf81bcd615feb5cf5ad6dcec767316cc1833ec1232e2b59f51130e","dweb:/ipfs/QmTd9P5RcFVgYKraGRgpM1S6UrNv8rkQUVDMetf2oFzeRh"],"license":"BUSL-1.1"},"src/interfaces/Morpho/IMorpho.sol":{"keccak256":"0xaee7826b29bd6336aac7694a7def971f2652ea278e37b0910e512e40c746c4b6","urls":["bzz-raw://2b866f45960a54883e5c9ead5285e5232860b8253088f7e4d0fb6544e24331ad","dweb:/ipfs/QmdDcqr5RLcVLu2oJ2PrBrLv7oRqTjbXombEK7QvVKRPJY"],"license":"GPL-2.0-or-later"},"src/interfaces/Morpho/IMorphoCallbacks.sol":{"keccak256":"0x6baa2f223dac77e9a6cc9f729951467332bf6fda9f3dcf92d6f70b86692b12bd","urls":["bzz-raw://b2e1cd9d9a4b4a63f95d35938c3fd2ab2a69797674d444c23441e0afa121d11c","dweb:/ipfs/QmU4sqFX974a2YAsyYsCuomrC9r67aQxnh9pBnBKmmd68H"],"license":"GPL-2.0-or-later"},"src/interfaces/Morpho/IOracle.sol":{"keccak256":"0xddca994a05092a5c0f49e24ca63109149de7a7d655f9e3710dc2558079765b35","urls":["bzz-raw://13975f1d2fad5b823b5b3a4a1e3e2d92dfad056cf62ecaa60fb18d7a65f5b816","dweb:/ipfs/QmTDjRoMmC2Rt5JzkPbrwVf9vGKSLkDg9JtxbpeAkgw223"],"license":"GPL-2.0-or-later"}},"version":1},"id":69}